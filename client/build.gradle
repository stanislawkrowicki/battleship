plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec).configureEach {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
    }
}

application {
    mainModule = 'com.put.battleship.client'
    mainClass = 'com.put.battleship.client.BattleShipsApp'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.put.battleship.client.BattleShipsApp'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    implementation project(':shared')
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
    implementation platform('io.netty:netty-bom:4.1.116.Final')
    implementation 'io.netty:netty-codec'
    implementation 'io.netty:netty-codec-http'
    implementation 'io.netty:netty-transport'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.0'

    implementation 'org.openjfx:javafx-controls:17.0.6'
    implementation 'org.openjfx:javafx-fxml:17.0.6'
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

